# Gravity AI API Service - Environment Configuration Template
# Copy this file to .env and fill in your values
# This file is for DEVELOPMENT ONLY - Production uses Google Secret Manager

# =================================================================
# CORE APPLICATION CONFIGURATION
# =================================================================

# Application Environment (development/staging/production)
ENVIRONMENT=development

# Server port for FastAPI application
PORT=8000

# CORS Configuration - allowed origins for cross-origin requests
# In development: local frontend URLs
# In production: Firebase Hosting domain only
ALLOWED_ORIGINS=http://localhost:3000,https://localhost:3000

# =================================================================
# GOOGLE CLOUD PLATFORM CONFIGURATION
# =================================================================

# Primary GCP project identifier
GOOGLE_CLOUD_PROJECT=gravityai-64e30

# Default deployment region for all services
REGION=asia-south1

# Google Cloud project for Vertex AI services (usually same as GOOGLE_CLOUD_PROJECT)
VERTEX_PROJECT_ID=gravityai-64e30

# Regional location for Vertex AI services
VERTEX_LOCATION=asia-south1

# =================================================================
# AI & ML SERVICES
# =================================================================

# OpenAI API authentication for GPT models
# Get from: https://platform.openai.com/api-keys
# Example: sk-proj-...
OPENAI_API_KEY=

# =================================================================
# WHATSAPP INTEGRATION (WATI)
# =================================================================

# WhatsApp service provider identifier
WHATSAPP_PROVIDER=wati

# WATI service API endpoint base URL
# Get from WATI dashboard - usually includes your server ID
# Example: https://live-server-12345.wati.io/api/v1
WATI_API_BASE_URL=

# WATI authentication token
# Get from WATI dashboard > Settings > API
# Example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ...
WATI_TOKEN=

# Webhook verification secret for WATI
# Used to verify incoming webhook requests from WATI
# Set this in WATI dashboard > Settings > Webhooks
WATI_VERIFY_SECRET=

# =================================================================
# FIREBASE CONFIGURATION
# =================================================================

# Firebase project ID for server-side operations
FIREBASE_PROJECT_ID=gravityai-64e30

# Path to Firebase Admin SDK service account key file
# Download from Firebase Console > Project Settings > Service Accounts
# In production, this is handled via Google Cloud service accounts
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json

# =================================================================
# GOOGLE CLOUD SERVICES
# =================================================================

# Pub/Sub Configuration
PUBSUB_PROJECT_ID=gravityai-64e30
WEBHOOK_TOPIC=gravity-ai-webhooks
INSIGHTS_TOPIC=gravity-ai-insights

# Cloud Storage Configuration
STORAGE_BUCKET=gravity-ai-storage
TEMP_BUCKET=gravity-ai-temp

# Firestore Database Configuration
FIRESTORE_PROJECT_ID=gravityai-64e30
FIRESTORE_DATABASE=(default)

# =================================================================
# AUTHENTICATION & SECURITY
# =================================================================

# JWT token signing key for application authentication
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(64))"
# JWT_SIGNING_KEY=

# API key salt for hashing (when implementing API key auth)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
# API_KEY_SALT=

# =================================================================
# LOGGING CONFIGURATION
# =================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable structured JSON logging (recommended for production)
STRUCTURED_LOGGING=true

# =================================================================
# DEVELOPMENT TOOLS
# =================================================================

# Enable FastAPI debug mode (shows detailed error pages)
# Only use in development - security risk in production
DEBUG=true

# Enable FastAPI automatic API documentation
# Set to false in production for security
ENABLE_DOCS=true

# =================================================================
# MONITORING & OBSERVABILITY (FUTURE IMPLEMENTATION)
# =================================================================

# Sentry error tracking DSN for the API service
# SENTRY_DSN=

# DataDog monitoring API key
# DATADOG_API_KEY=

# Application performance monitoring
# NEW_RELIC_LICENSE_KEY=

# =================================================================
# RATE LIMITING & PERFORMANCE (FUTURE IMPLEMENTATION)
# =================================================================

# Redis URL for rate limiting and caching
# REDIS_URL=redis://localhost:6379/0

# Rate limiting configuration
# RATE_LIMIT_PER_MINUTE=60
# RATE_LIMIT_BURST=10

# Request timeout in seconds
# REQUEST_TIMEOUT=30
